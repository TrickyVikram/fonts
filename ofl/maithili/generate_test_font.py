#!/usr/bin/env python3
"""
Maithili Font Generator - Testing Version
Creates a basic TTF font with essential Maithili characters
"""

import fontforge
import os

def create_maithili_font():
    """Create a basic Maithili font with essential characters"""
    
    # Create new font
    font = fontforge.font()
    
    # Set font properties
    font.fontname = "MaithiliTest"
    font.familyname = "Maithili Test"
    font.fullname = "Maithili Test Regular"
    font.copyright = "Copyright 2024 Maithili Test Font"
    font.version = "1.000"
    font.weight = "Regular"
    
    # Set encoding
    font.encoding = "unicode"
    
    # Set font metrics
    font.em = 1000
    font.ascent = 800
    font.descent = 200
    
    # Essential Maithili characters with their Unicode values
    characters = {
        # Vowels
        0x0905: "‡§Ö",  # DEVANAGARI LETTER A
        0x0906: "‡§Ü",  # DEVANAGARI LETTER AA
        0x0907: "‡§á",  # DEVANAGARI LETTER I
        0x0908: "‡§à",  # DEVANAGARI LETTER II
        0x0909: "‡§â",  # DEVANAGARI LETTER U
        0x090A: "‡§ä",  # DEVANAGARI LETTER UU
        0x090F: "‡§è",  # DEVANAGARI LETTER E
        0x0910: "‡§ê",  # DEVANAGARI LETTER AI
        0x0913: "‡§ì",  # DEVANAGARI LETTER O
        0x0914: "‡§î",  # DEVANAGARI LETTER AU
        
        # Basic Consonants
        0x0915: "‡§ï",  # DEVANAGARI LETTER KA
        0x0916: "‡§ñ",  # DEVANAGARI LETTER KHA
        0x0917: "‡§ó",  # DEVANAGARI LETTER GA
        0x0918: "‡§ò",  # DEVANAGARI LETTER GHA
        0x0919: "‡§ô",  # DEVANAGARI LETTER NGA
        0x091A: "‡§ö",  # DEVANAGARI LETTER CA
        0x091B: "‡§õ",  # DEVANAGARI LETTER CHA
        0x091C: "‡§ú",  # DEVANAGARI LETTER JA
        0x091D: "‡§ù",  # DEVANAGARI LETTER JHA
        0x091E: "‡§û",  # DEVANAGARI LETTER NYA
        0x091F: "‡§ü",  # DEVANAGARI LETTER TTA
        0x0920: "‡§†",  # DEVANAGARI LETTER TTHA
        0x0921: "‡§°",  # DEVANAGARI LETTER DDA
        0x0922: "‡§¢",  # DEVANAGARI LETTER DDHA
        0x0923: "‡§£",  # DEVANAGARI LETTER NNA
        0x0924: "‡§§",  # DEVANAGARI LETTER TA
        0x0925: "‡§•",  # DEVANAGARI LETTER THA
        0x0926: "‡§¶",  # DEVANAGARI LETTER DA
        0x0927: "‡§ß",  # DEVANAGARI LETTER DHA
        0x0928: "‡§®",  # DEVANAGARI LETTER NA
        0x092A: "‡§™",  # DEVANAGARI LETTER PA
        0x092B: "‡§´",  # DEVANAGARI LETTER PHA
        0x092C: "‡§¨",  # DEVANAGARI LETTER BA
        0x092D: "‡§≠",  # DEVANAGARI LETTER BHA
        0x092E: "‡§Æ",  # DEVANAGARI LETTER MA
        0x092F: "‡§Ø",  # DEVANAGARI LETTER YA
        0x0930: "‡§∞",  # DEVANAGARI LETTER RA
        0x0932: "‡§≤",  # DEVANAGARI LETTER LA
        0x0935: "‡§µ",  # DEVANAGARI LETTER VA
        0x0936: "‡§∂",  # DEVANAGARI LETTER SHA
        0x0937: "‡§∑",  # DEVANAGARI LETTER SSA
        0x0938: "‡§∏",  # DEVANAGARI LETTER SA
        0x0939: "‡§π",  # DEVANAGARI LETTER HA
        
        # Numbers
        0x0966: "‡•¶",  # DEVANAGARI DIGIT ZERO
        0x0967: "‡•ß",  # DEVANAGARI DIGIT ONE
        0x0968: "‡•®",  # DEVANAGARI DIGIT TWO
        0x0969: "‡•©",  # DEVANAGARI DIGIT THREE
        0x096A: "‡•™",  # DEVANAGARI DIGIT FOUR
        0x096B: "‡•´",  # DEVANAGARI DIGIT FIVE
        0x096C: "‡•¨",  # DEVANAGARI DIGIT SIX
        0x096D: "‡•≠",  # DEVANAGARI DIGIT SEVEN
        0x096E: "‡•Æ",  # DEVANAGARI DIGIT EIGHT
        0x096F: "‡•Ø",  # DEVANAGARI DIGIT NINE
        
        # Basic Latin for testing
        0x0041: "A",
        0x0042: "B",
        0x0043: "C",
        0x0020: " ",  # Space
    }
    
    print("Creating Maithili characters...")
    
    for unicode_val, char_name in characters.items():
        # Create glyph
        glyph = font.createChar(unicode_val)
        glyph.glyphname = f"uni{unicode_val:04X}"
        
        # Create simple rectangular shape for testing
        # In real font, these would be proper character designs
        pen = glyph.glyphPen()
        
        if unicode_val == 0x0020:  # Space character
            glyph.width = 250
        else:
            # Simple rectangular placeholder
            pen.moveTo((50, 50))
            pen.lineTo((50, 650))
            pen.lineTo((450, 650))
            pen.lineTo((450, 50))
            pen.closePath()
            
            # Add a smaller internal rectangle to make it look like a character
            pen.moveTo((100, 100))
            pen.lineTo((100, 600))
            pen.lineTo((400, 600))
            pen.lineTo((400, 100))
            pen.closePath()
            
            glyph.width = 500
        
        print(f"Created: {char_name} (U+{unicode_val:04X})")
    
    return font

def generate_font_files():
    """Generate TTF files"""
    
    print("\nüé® Creating Maithili Test Font...")
    
    # Create the font
    font = create_maithili_font()
    
    # Output directory
    output_dir = "/Users/vikramkumar/Desktop/Google fonts project/fonts/ofl/maithili"
    
    # Generate TTF file
    ttf_path = os.path.join(output_dir, "MaithiliTest-Regular.ttf")
    font.generate(ttf_path)
    print(f"\n‚úÖ Generated: {ttf_path}")
    
    # Also create a bold version (same design, just different name)
    font.fontname = "MaithiliTestBold"
    font.familyname = "Maithili Test"
    font.fullname = "Maithili Test Bold"
    font.weight = "Bold"
    
    ttf_bold_path = os.path.join(output_dir, "MaithiliTest-Bold.ttf")
    font.generate(ttf_bold_path)
    print(f"‚úÖ Generated: {ttf_bold_path}")
    
    font.close()
    print("\nüéâ Font generation complete!")
    
    return ttf_path, ttf_bold_path

if __name__ == "__main__":
    try:
        regular_path, bold_path = generate_font_files()
        print(f"\nüìÅ Font files created:")
        print(f"   Regular: {regular_path}")
        print(f"   Bold: {bold_path}")
        print(f"\nüß™ Test these fonts with Maithili text:")
        print(f"   ‡§Æ‡•à‡§•‡§ø‡§≤‡•Ä ‡§≠‡§æ‡§∑‡§æ")
        print(f"   ‡§Ö‡§Ü‡§á‡§à‡§â‡§ä‡§è‡§ê‡§ì‡§î")
        print(f"   ‡§ï‡§ñ‡§ó‡§ò‡§ô‡§ö‡§õ‡§ú‡§ù‡§û")
        print(f"   ‡•¶‡•ß‡•®‡•©‡•™‡•´‡•¨‡•≠‡•Æ‡•Ø")
        
    except Exception as e:
        print(f"‚ùå Error: {e}")
        print("Make sure FontForge is properly installed.")
